// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package sqlc

import (
	"database/sql"
	"time"

	"github.com/jackc/pgx/v5/pgtype"
)

type Commit struct {
	ID      string         `db:"id"`
	PrID    string         `db:"pr_id"`
	Message sql.NullString `db:"message"`
}

type Pr struct {
	ID                string             `db:"id"`
	Url               sql.NullString     `db:"url"`
	Title             sql.NullString     `db:"title"`
	State             pgtype.Text        `db:"state"`
	Author            pgtype.Text        `db:"author"`
	Additions         pgtype.Int4        `db:"additions"`
	Deletions         pgtype.Int4        `db:"deletions"`
	MergedAt          pgtype.Timestamptz `db:"merged_at"`
	CreatedAt         time.Time          `db:"created_at"`
	BranchName        sql.NullString     `db:"branch_name"`
	RepositoryName    pgtype.Text        `db:"repository_name"`
	RepositoryOwner   pgtype.Text        `db:"repository_owner"`
	ReviewsRequested  pgtype.Int4        `db:"reviews_requested"`
	ReviewRequestedAt pgtype.Timestamptz `db:"review_requested_at"`
}

type PullRequestReview struct {
	ID            string             `db:"id"`
	PullRequestID string             `db:"pull_request_id"`
	AuthorLogin   sql.NullString     `db:"author_login"`
	State         pgtype.Text        `db:"state"`
	Body          sql.NullString     `db:"body"`
	Url           sql.NullString     `db:"url"`
	SubmittedAt   pgtype.Timestamptz `db:"submitted_at"`
	CreatedAt     pgtype.Timestamptz `db:"created_at"`
	UpdatedAt     pgtype.Timestamptz `db:"updated_at"`
}

type Repository struct {
	Org      string      `db:"org"`
	Slug     string      `db:"slug"`
	Language pgtype.Text `db:"language"`
}

type Team struct {
	Team   string `db:"team"`
	Member string `db:"member"`
}
