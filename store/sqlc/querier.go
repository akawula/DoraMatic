// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package sqlc

import (
	"context"
	"database/sql"

	"github.com/jackc/pgx/v5/pgtype"
)

type Querier interface {
	CountPullRequests(ctx context.Context, arg CountPullRequestsParams) (int32, error)
	// Repositories --
	CountRepositories(ctx context.Context, dollar_1 string) (int64, error)
	// Team Statistics --
	CountTeamCommitsByDateRange(ctx context.Context, arg CountTeamCommitsByDateRangeParams) (int32, error)
	CreateRepository(ctx context.Context, arg CreateRepositoryParams) error
	CreateTeamMember(ctx context.Context, arg CreateTeamMemberParams) error
	FetchSecurityPullRequests(ctx context.Context) ([]FetchSecurityPullRequestsRow, error)
	GetAllRepositories(ctx context.Context) ([]Repository, error)
	// Pull Requests (prs) --
	GetLastPullRequestMergedDate(ctx context.Context, arg GetLastPullRequestMergedDateParams) (pgtype.Timestamptz, error)
	// pgtype.Timestamptz
	GetTeamPullRequestStatsByDateRange(ctx context.Context, arg GetTeamPullRequestStatsByDateRangeParams) (GetTeamPullRequestStatsByDateRangeRow, error)
	// Commits --
	InsertCommit(ctx context.Context, arg InsertCommitParams) error
	// List Pull Requests (Paginated & Searchable) --
	ListPullRequests(ctx context.Context, arg ListPullRequestsParams) ([]ListPullRequestsRow, error)
	// Use ILIKE for case-insensitive search, handle empty search string
	ListRepositories(ctx context.Context, arg ListRepositoriesParams) ([]Repository, error)
	SearchDistinctTeamNamesByPrefix(ctx context.Context, dollar_1 sql.NullString) ([]string, error)
	TruncateRepositories(ctx context.Context) error
	// Teams --
	TruncateTeams(ctx context.Context) error
	UpsertPullRequest(ctx context.Context, arg UpsertPullRequestParams) error
	// Pull Request Reviews --
	UpsertPullRequestReview(ctx context.Context, arg UpsertPullRequestReviewParams) error
}

var _ Querier = (*Queries)(nil)
